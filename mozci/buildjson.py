#!/usr/bin/env python
"""
This module helps with the buildjson data generated by the Release Engineering
systems: http://builddata.pub.build.mozilla.org/builddata/buildjson
"""
import json
import logging

log = logging.getLogger()

BUILDJSON_DATA = "http://builddata.pub.build.mozilla.org/builddata/buildjson"


def _fetch(unix_timestamp):
    date = "2015-01-13"
    log.debug("Unix timestamp value: %d represents %s" %
              (unix_timestamp, date))
    # XXX: Fetch if not on disk
    # XXX: gzip -d
    return json.load(open("builds-%s.js" % date))


def query_buildjson_info(request_id):
    """
    This looks for a job identified by `request_id` inside of a buildjson
    file under the "builds" entry.

    If found, the returning entry will look like this (only important values
    are referenced):
    {
        "builder_id": int, # It is a unique identifier of a builder
        "starttime": int,
        "endtime": int,
        "properties": {
            "buildername": string,
            "buildid": string,
            "revision": string,
            "repo_path": string, # e.g. projects/cedar
            "log_url", string,
            "slavename": string, # e.g. t-w864-ix-120
            "blobber_files": json, # Mainly applicable to test jobs
            "packageUrl": string, # It only applies for build jobs
            "testsUrl": string,   # It only applies for build jobs
            "symbolsUrl": string, # It only applies for build jobs
        },
        "request_ids": list of ints, # Scheduling ID
        "requestime": int,
        "result": int, # Job's exit code
        "slave_id": int, # Unique identifier for the machine that run it
    }
    """
    assert type(request_id) is int
    # XXX: Determine claimed at
    j = _fetch(1421191653)
    builds = j["builds"]
    for i in builds:
        if request_id in i["request_ids"]:
            log.debug("Found %s" % str(i))
            return i

    return None
